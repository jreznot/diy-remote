buildscript {
    repositories {
		mavenCentral()
        maven {
            url 'https://raw.github.com/rodionmoiseev/maven-repo/master/repo/releases'
        }
    }
    dependencies {
        classpath 'org.rodion.gradle:idea-utils-plugin:0.1'
		classpath 'com.android.tools.build:gradle:0.5.7'
    }
}

allprojects {
    group = 'org.strangeway.lazy-remote'
    version = '1.0'
	
	repositories {
	    mavenCentral()
	}
}

apply plugin: 'idea'
apply plugin: 'idea-utils'

project(':shared') {
	apply plugin: 'java'
	apply plugin: 'idea'
	
	sourceSets {
	    main {
	        java {
	            srcDir 'src'
	        }
	        resources {
	            srcDir 'src'
	        }
	    }
	}
}

project(':server') {
	apply plugin: 'java'
	apply plugin: 'idea'
    apply plugin: 'application'

    sourceSets {
        main {
            java {
                srcDir 'src'
            }
            resources {
                srcDir 'src'
            }
        }
        test {
            java {
                srcDir 'test'
            }
            resources {
                srcDir 'test'
            }
        }
    }

	dependencies {
		compile project(':shared')
		
		testCompile 'org.testng:testng:6.8'

        compile 'org.springframework:spring-webmvc:3.2.4.RELEASE'
		compile 'org.eclipse.jetty:jetty-server:8.1.13.v20130916'
		compile 'org.eclipse.jetty:jetty-webapp:8.1.13.v20130916'
		compile 'com.google.code.gson:gson:2.2.4'

		compile 'org.codehaus.groovy:groovy:2.1.7'

		compile 'org.apache.commons:commons-lang3:3.1'
		compile 'commons-io:commons-io:2.4'
	}

    mainClassName = 'org.strangeway.lazyremote.server.LazyRemoteServer'
}

project(':integration:vlc') {
    apply plugin: 'groovy'
    apply plugin: 'idea'

    sourceSets {
        main {
            groovy {
                srcDirs = ['src']
            }
        }

        test {
            groovy {
                srcDirs = ['test']
            }
        }
    }

    dependencies {
        compile 'org.codehaus.groovy:groovy:2.1.7'
    }

    task scriptsZip(type: Zip) {
       from file('src')
    }

    artifacts {
        archives scriptsZip
    }
}

project(':integration:windows') {
    apply plugin: 'groovy'
    apply plugin: 'idea'

    sourceSets {
        main {
            groovy {
                srcDirs = ['src']
            }
        }

        test {
            groovy {
                srcDirs = ['test']
            }
        }
    }

    dependencies {
        compile 'org.codehaus.groovy:groovy:2.1.7'
    }

    task scriptsZip(type: Zip) {
        from file('src')
    }

    artifacts {
        archives scriptsZip
    }
}

project(':client') {
	apply plugin: 'android'
	apply plugin: 'idea'

	dependencies {
		compile project(':shared')
		
		compile 'com.google.code.gson:gson:2.2.4'
	}
	
	android {
		compileSdkVersion 10
		buildToolsVersion '18.0.1'
		
		sourceSets {
	        main {
	            manifest.srcFile 'AndroidManifest.xml'
	            java.srcDirs = ['src']
	            resources.srcDirs = ['src']
	            aidl.srcDirs = ['src']
	            renderscript.srcDirs = ['src']
	            res.srcDirs = ['res']
	            assets.srcDirs = ['assets']
	        }

	        instrumentTest.setRoot('test')
	    }
	}
	
	idea {
		module {
			sourceDirs += file('src')
			testSourceDirs += file('test')
		}
	}
}

idea {
    project {
        languageLevel = '1.6'
        copyright {
            name = 'The BSD 3-Clause License'
            license = file('LICENSE')
        }
        vcs {
            vcs = 'Git'
        }
    }
}